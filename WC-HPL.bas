10 'WINTER CAMP XLV HOT POTATO RANDOMIZER
20 'ALAN WILSON 2021
25 'BE SURE TO RUN 7000 FIRST TO LOAD ASM
25 CLEAR 2048
30 RANDOM
35 IL = 50
40 DIM N$(IL) 'LIST OF NAMES
50 DIM NU(IL) 'NAME USED 1 OR NOT 0
60 NN = 0 'TOTAL NUM NAMES
70 REM TIME BTWN EVENTS (APROX SECS)
80 BI = 1
90 BX = 20
100 REM TIME EVENT LASTS
110 CI = 5
120 CX = 15
200 CLS 'NAME INPUT
205 GOSUB 1700
210 PRINT "        ";
220 PRINT NN
230 PRINT "ENTER YOUR NAME"
240 A$ = ""
250 INPUT A$
260 IF A$ = "DONE" GOTO 390
270 PRINT A$
280 IF A$ = "" GOTO 200
285 IF LEN(A$)>10 PRINT"TOO LONG":FORZZ=0TO300:NEXTZZ:GOTO200
290 PRINT "PRESS Y TO CONFIRM, N TO REDO"
310 B$ = INKEY$
320 IF B$ = "" GOTO 310
330 IF B$ = "Y" GOTO 350
340 GOTO 200
350 N$(NN) = A$
360 NN = NN + 1
370 GOTO 200
390 'DONE
1000 'HOT POTATO LOOP
1010 CLS
1016 GOSUB 1700
1020 DT = BT
1030 GOSUB 3000
1040 GOSUB 1400
1050 GOSUB 2000
1060 CLS
1066 GOSUB 1700
1075 A$ = R$
1076 GOSUB 4000
1077 X = USR(22784)
1078 GOSUB 5000
1090 DT = CT
1100 GOSUB 3000
1110 GOTO 1000
1400 'RAND PICK NAME, THEN UNSEL
1410 NI = NI + RND(NN)-1
1430 GOSUB 1500 'PICK
1440 IF R$ = "NULL" THEN GOSUB 1600
1450 NU(NI) = 1 'DESEL
1490 RETURN
1500 'SELECT NEXT UNPICK
1505 Z = 0
1510 NI = NI + 1
1520 IF NI >= NN THEN GOTO 1560 'REACHED END
1522 IF Z = 3 THEN R$ = "NULL" : RETURN 'ALL AND NONE
1525 IF NU(NI) = 1 THEN NI = NI + 1 : GOTO 1520 'SKIP UNSEL
1530 R$ = N$(NI)
1550 RETURN
1560 'CASE THAT NI >= NN
1570 NI = NI - NN
1580 IF NI >= NN THEN GOTO 1560
1590 Z = Z + 1
1595 GOTO 1522
1600 'RESET SELD NAMES
1610 FOR I = 0 TO NN-1
1620 NU(I) = 0
1630 NEXT I
1632 NI = RND(NN) 'RE RANDOM
1635 GOSUB 1500 'CALL NAME SEL
1640 RETURN
1700 PRINT "                WINTER CAMP XLV HOT POTATO LUNCH";
1710 RETURN
2000 'RAND SEL TIME AND DUR
2010 BT = RND(BX-BI+1)+BI-1 'SEL BTWN BI AND BX, INC
2020 CT = RND(CX-CI+1)+CI-1
2030 RETURN
3000 'DELAY OF ~DT SECONDS
3010 FOR ZY = 1 TO DT 
3030 POKE 15423,128
3040 FOR ZZ = 1 TO 100 
3050 NEXT ZZ
3055 POKE 15423,143
3060 FOR ZZ = 1 TO 100
3070 NEXT ZZ
3080 NEXT ZY
3090 RETURN
4000 'CONV STRING BIGPRINT A$
4010 ZM = 22784 'PUT STRING HERE IN RAM
4020 ZP = INT((10-LEN(A$))/2) 'CENTER
4030 IF ZP = 0 GOTO 4050
4040 POKE ZM,32
4041 ZM = ZM + 1
4045 ZP = ZP - 1
4048 GOTO 4030
4050 FOR ZI = 1 TO LEN(A$)
4070 ZS$ = MID$(A$,ZI,1)
4080 ZA = ASC(ZS$)
4090 POKE ZM,ZA
4095 ZM = ZM + 1
4100 NEXT ZI
4110 POKE ZM,0
4120 RETURN
5000 FOR I = 1 TO 30 'BEEP
5020 OUT 255,2:OUT 255,1
5030 NEXT I
5040 OUT 255,0
5050 RETURN
7000 CLS : PRINT "LOADING" 'PAYLOAD FOR BIGPRINT
7001 IX = 22816 'ADDR IN RAM 5920H
7002 RESTORE
7003 READ Z
7005 POKE IX,Z
7006 IX = IX + 1
7007 GOTO 7003
7008 DATA 1,2,61,17,16,92,205,72,89,1,2,62
7009 DATA 17,27,92,205,72,89,1,2,63,17,38,92
7010 DATA 205,72,89,201,205,127,10,1,130,61,84,93
7011 DATA 205,72,89,201,26,254,0,40,14,197,225,205
7012 DATA 92,89,3,3,3,3,3,3,19,24,237,201
7013 DATA 197,213,34,12,92,230,63,33,6,90,68,77
7014 DATA 38,0,111,41,41,41,9,43,34,14,92,6
7015 DATA 3,42,14,92,35,35,35,34,14,92,197,6
7016 DATA 3,197,42,14,92,205,186,89,193,42,14,92
7017 DATA 43,34,14,92,16,239,193,197,62,1,184,32
7018 DATA 12,33,6,92,6,6,62,15,166,119,35,16
7019 DATA 249,42,14,92,35,35,35,34,14,92,205,213
7020 DATA 89,193,16,193,205,213,89,209,193,201,126,7
7021 DATA 87,33,6,92,6,6,122,230,1,79,135,129
7022 DATA 79,126,135,135,129,119,35,122,7,87,16,238
7023 DATA 201,33,6,92,6,6,62,128,182,119,35,16
7024 DATA 249,42,12,92,84,93,33,6,92,1,6,0
7025 DATA 237,176,42,12,92,62,64,133,111,140,149,103
7026 DATA 34,12,92,33,6,92,6,6,175,119,35,16
7027 DATA 251,201,56,68,4,52,84,84,56,0,16,40
7028 DATA 68,68,124,68,68,0,120,36,36,56,36,36
7029 DATA 120,0,56,68,64,64,64,68,56,0,120,36
7030 DATA 36,36,36,36,120,0,124,64,64,120,64,64
7031 DATA 124,0,124,64,64,120,64,64,64,0,60,64
7032 DATA 64,76,68,68,60,0,68,68,68,124,68,68
7033 DATA 68,0,124,16,16,16,16,16,124,0,4,4
7034 DATA 4,4,4,68,56,0,68,72,80,96,80,72
7035 DATA 68,0,64,64,64,64,64,64,124,0,68,108
7036 DATA 84,84,68,68,68,0,68,100,84,76,68,68
7037 DATA 68,0,56,68,68,68,68,68,56,0,120,68
7038 DATA 68,120,64,64,64,0,56,68,68,68,84,72
7039 DATA 52,0,120,68,68,120,80,72,68,0,56,68
7040 DATA 64,56,4,68,56,0,124,16,16,16,16,16
7041 DATA 16,0,68,68,68,68,68,68,56,0,68,68
7042 DATA 68,40,40,16,16,0,68,68,68,84,84,108
7043 DATA 68,0,68,68,40,16,40,68,68,0,68,68
7044 DATA 40,16,16,16,16,0,124,4,8,16,32,64
7045 DATA 124,0,16,56,84,16,16,16,16,0,16,16
7046 DATA 16,16,84,56,16,0,0,16,32,124,32,16
7047 DATA 0,0,0,16,8,124,8,16,0,0,0,0
7048 DATA 0,0,0,0,124,0,0,0,0,0,0,0
7049 DATA 0,0,16,16,16,16,16,0,16,0,40,40
7050 DATA 0,0,0,0,0,0,40,40,124,40,124,40
7051 DATA 40,0,16,60,80,56,20,120,16,0,96,100
7052 DATA 8,16,32,76,12,0,32,80,80,32,84,72
7053 DATA 52,0,12,12,8,16,0,0,0,0,8,16
7054 DATA 32,32,32,16,8,0,32,16,8,8,8,16
7055 DATA 32,0,16,84,56,124,56,84,16,0,0,16
7056 DATA 16,124,16,16,0,0,0,0,0,0,0,24
7057 DATA 24,16,0,0,0,124,0,0,0,0,0,0
7058 DATA 0,0,0,24,24,0,0,4,8,16,32,64
7059 DATA 0,0,56,68,76,84,100,68,56,0,16,48
7060 DATA 16,16,16,16,56,0,56,68,4,56,64,64
7061 DATA 124,0,56,4,4,24,4,4,56,0,8,24
7062 DATA 40,72,124,8,8,0,124,64,120,4,4,68
7063 DATA 56,0,24,32,64,120,68,68,56,0,124,4
7064 DATA 8,16,32,64,64,0,56,68,68,56,68,68
7065 DATA 56,0,56,68,68,60,4,8,48,0,0,48
7066 DATA 48,0,48,48,0,0,0,48,48,0,48,48
7067 DATA 32,64,8,16,32,64,32,16,8,0,0,0
7068 DATA 124,0,124,0,0,0,64,32,16,8,16,32
7069 DATA 64,0,56,68,4,8,16,0,16,0,0,0
7070 DATA 0,0,0,0,0,0,0,0,87,69,76,67
7071 DATA 79,77,69,32,84,79,0,32,32,87,73,78
7072 DATA 84,69,82,32,32,0,32,67,65,77,80,32
7073 DATA 88,76,86,32,0
7074 DATA -1
7004 IF Z = -1 THEN GOTO 7076
7076 POKE 16526,32 'WELCOME
7077 POKE 16527,89
7078 'END OF LOADER
7079 X=USR(0)
7080 POKE 16526,60 'USR()
7090 PRINT "github.com/alnwlsn/WCXLV-potato"